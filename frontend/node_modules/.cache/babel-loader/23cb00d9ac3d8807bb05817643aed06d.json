{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthand, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\nimport FeedLike from './FeedLike';\n/**\r\n * A feed can contain a meta.\r\n */\n\nfunction FeedMeta(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      like = props.like;\n  var classes = cx('meta', className);\n  var rest = getUnhandledProps(FeedMeta, props);\n  var ElementType = getElementType(FeedMeta, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), createShorthand(FeedLike, function (val) {\n    return {\n      content: val\n    };\n  }, like, {\n    autoGenerateKey: false\n  }), content);\n}\n\nFeedMeta.handledProps = [\"as\", \"children\", \"className\", \"content\", \"like\"];\nFeedMeta.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Shorthand for FeedLike. */\n  like: customPropTypes.itemShorthand\n} : {};\nexport default FeedMeta;","map":{"version":3,"names":["_extends","cx","PropTypes","React","childrenUtils","createShorthand","customPropTypes","getElementType","getUnhandledProps","FeedLike","FeedMeta","props","children","className","content","like","classes","rest","ElementType","isNil","createElement","val","autoGenerateKey","handledProps","propTypes","process","env","NODE_ENV","as","elementType","node","string","contentShorthand","itemShorthand"],"sources":["C:/Users/HP/Downloads/proxydeploy/frontend/node_modules/semantic-ui-react/dist/es/views/Feed/FeedMeta.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport cx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { childrenUtils, createShorthand, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\r\nimport FeedLike from './FeedLike';\r\n/**\r\n * A feed can contain a meta.\r\n */\r\n\r\nfunction FeedMeta(props) {\r\n  var children = props.children,\r\n      className = props.className,\r\n      content = props.content,\r\n      like = props.like;\r\n  var classes = cx('meta', className);\r\n  var rest = getUnhandledProps(FeedMeta, props);\r\n  var ElementType = getElementType(FeedMeta, props);\r\n\r\n  if (!childrenUtils.isNil(children)) {\r\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\r\n      className: classes\r\n    }), children);\r\n  }\r\n\r\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\r\n    className: classes\r\n  }), createShorthand(FeedLike, function (val) {\r\n    return {\r\n      content: val\r\n    };\r\n  }, like, {\r\n    autoGenerateKey: false\r\n  }), content);\r\n}\r\n\r\nFeedMeta.handledProps = [\"as\", \"children\", \"className\", \"content\", \"like\"];\r\nFeedMeta.propTypes = process.env.NODE_ENV !== \"production\" ? {\r\n  /** An element type to render as (string or function). */\r\n  as: PropTypes.elementType,\r\n\r\n  /** Primary content. */\r\n  children: PropTypes.node,\r\n\r\n  /** Additional classes. */\r\n  className: PropTypes.string,\r\n\r\n  /** Shorthand for primary content. */\r\n  content: customPropTypes.contentShorthand,\r\n\r\n  /** Shorthand for FeedLike. */\r\n  like: customPropTypes.itemShorthand\r\n} : {};\r\nexport default FeedMeta;"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,EAAP,MAAe,MAAf;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,eAAxB,EAAyCC,eAAzC,EAA0DC,cAA1D,EAA0EC,iBAA1E,QAAmG,WAAnG;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA;AACA;AACA;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;EACvB,IAAIC,QAAQ,GAAGD,KAAK,CAACC,QAArB;EAAA,IACIC,SAAS,GAAGF,KAAK,CAACE,SADtB;EAAA,IAEIC,OAAO,GAAGH,KAAK,CAACG,OAFpB;EAAA,IAGIC,IAAI,GAAGJ,KAAK,CAACI,IAHjB;EAIA,IAAIC,OAAO,GAAGf,EAAE,CAAC,MAAD,EAASY,SAAT,CAAhB;EACA,IAAII,IAAI,GAAGT,iBAAiB,CAACE,QAAD,EAAWC,KAAX,CAA5B;EACA,IAAIO,WAAW,GAAGX,cAAc,CAACG,QAAD,EAAWC,KAAX,CAAhC;;EAEA,IAAI,CAACP,aAAa,CAACe,KAAd,CAAoBP,QAApB,CAAL,EAAoC;IAClC,OAAO,aAAaT,KAAK,CAACiB,aAAN,CAAoBF,WAApB,EAAiClB,QAAQ,CAAC,EAAD,EAAKiB,IAAL,EAAW;MACtEJ,SAAS,EAAEG;IAD2D,CAAX,CAAzC,EAEhBJ,QAFgB,CAApB;EAGD;;EAED,OAAO,aAAaT,KAAK,CAACiB,aAAN,CAAoBF,WAApB,EAAiClB,QAAQ,CAAC,EAAD,EAAKiB,IAAL,EAAW;IACtEJ,SAAS,EAAEG;EAD2D,CAAX,CAAzC,EAEhBX,eAAe,CAACI,QAAD,EAAW,UAAUY,GAAV,EAAe;IAC3C,OAAO;MACLP,OAAO,EAAEO;IADJ,CAAP;EAGD,CAJkB,EAIhBN,IAJgB,EAIV;IACPO,eAAe,EAAE;EADV,CAJU,CAFC,EAQhBR,OARgB,CAApB;AASD;;AAEDJ,QAAQ,CAACa,YAAT,GAAwB,CAAC,IAAD,EAAO,UAAP,EAAmB,WAAnB,EAAgC,SAAhC,EAA2C,MAA3C,CAAxB;AACAb,QAAQ,CAACc,SAAT,GAAqBC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;EAC3D;EACAC,EAAE,EAAE1B,SAAS,CAAC2B,WAF6C;;EAI3D;EACAjB,QAAQ,EAAEV,SAAS,CAAC4B,IALuC;;EAO3D;EACAjB,SAAS,EAAEX,SAAS,CAAC6B,MARsC;;EAU3D;EACAjB,OAAO,EAAER,eAAe,CAAC0B,gBAXkC;;EAa3D;EACAjB,IAAI,EAAET,eAAe,CAAC2B;AAdqC,CAAxC,GAejB,EAfJ;AAgBA,eAAevB,QAAf"},"metadata":{},"sourceType":"module"}